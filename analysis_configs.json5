{
  // Configuration for the Wine dataset
  "wine": {
    // Neural Network parameters
    "NN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "EPOCHS": 50,
      "BATCH_SIZE": 128,
      "VALIDATION_SPLIT": 0.2,
      "ACTIVATION": "relu",
      "BINARY_ACTIVATION": "sigmoid",
      "MULTIPLE_ACTIVATION": "softmax",
      "OPTIMIZER": "adam",
      "BINARY_LOSS": "binary_crossentropy",
      "MULTIPLE_LOSS": "sparse_categorical_crossentropy",
      "METRIC": "accuracy",
      // Hyperparameter tuning ranges
      "HYPERPARAMETER_RANGES": {
        "epochs": [
          10,
          50,
          100,
          200,
          400
        ],
        "batch_size": [
          32,
          64,
          128,
          256,
          512
        ],
        "learning_rate": [0.001, 0.01, 0.1],
        "num_layers": [1, 2, 3, 4, 5],
        "units_per_layer": [16, 32, 64, 86, 98, 110, 128]
      }
    },
    "KNN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_NEIGHBORS": [3, 5, 7, 9, 11, 20, 40, 80, 120, 200],
      "WEIGHTS": ["uniform", "distance"]
    },
    "SVM": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "C": [0.1, 1, 10, 100, 1000],
      "KERNEL": "rbf",
      "GAMMA": [0.001, 0.01, 0.1, 1, 10],
      "DEGREE": [2, 3, 4],  // Only applicable for polynomial kernel
      "COEF0": [0, 1, 10],   // For polynomial and sigmoid kernels
    },
    "BOOST": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_ESTIMATORS": [50, 100, 150],
      "LEARNING_RATE": [0.01, 0.1, 1.0],
      "TREE_PARAMS": {
          "estimator__max_depth": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "estimator__min_samples_split": [1, 2, 5, 10, 15, 20, 30, 45],
          "estimator__min_samples_leaf": [1, 2, 5, 10, 15, 20, 30, 45]
      }
    }
  },
  // Configuration for the Fashion MNIST dataset
  "fashion_mnist": {
    "NN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "EPOCHS": 50,
      "BATCH_SIZE": 128,
      "VALIDATION_SPLIT": 0.2,
      "ACTIVATION": "relu",
      "OPTIMIZER": "adam",
      "LOSS": "sparse_categorical_crossentropy",
      "METRIC": "accuracy",
      // Hyperparameter tuning ranges
      "HYPERPARAMETER_RANGES": {
        "epochs": [
          10,
          50,
          100
        ],
        "batch_size": [
          32,
          64,
          128
        ]
      }
    },
    "KNN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_NEIGHBORS": [3, 5, 7, 9, 11],
      "WEIGHTS": ["uniform", "distance"]
    },
    "SVM": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "C": [0.1, 1, 10, 100, 1000],
      "KERNEL": "rbf",
      "GAMMA": [0.001, 0.01, 0.1, 1, 10],
      "DEGREE": [2, 3, 4],  // Only applicable for polynomial kernel
      "COEF0": [0, 1, 10],   // For polynomial and sigmoid kernels
    },
    "BOOST": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_ESTIMATORS": [50, 100, 150],
      "LEARNING_RATE": [0.01, 0.1, 1.0]
    }
  },
  "adult_census_income": {
// Neural Network parameters
    "NN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "EPOCHS": 50,
      "BATCH_SIZE": 128,
      "VALIDATION_SPLIT": 0.2,
      "ACTIVATION": "relu",
      "BINARY_ACTIVATION": "sigmoid",
      "MULTIPLE_ACTIVATION": "softmax",
      "OPTIMIZER": "adam",
      "BINARY_LOSS": "binary_crossentropy",
      "MULTIPLE_LOSS": "sparse_categorical_crossentropy",
      "METRIC": "accuracy",
      // Hyperparameter tuning ranges
      "HYPERPARAMETER_RANGES": {
        "epochs": [
          10,
          50,
          100,
          200,
          400
        ],
        "batch_size": [
          32,
          64,
          128,
          256,
          512
        ],
        "learning_rate": [0.001, 0.01, 0.1],
        "num_layers": [1, 2, 3, 4, 5],
        "units_per_layer": [16, 32, 64, 86, 98, 110, 128]
      }
    },
    "KNN": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_NEIGHBORS": [3, 5, 7, 9, 11, 20, 40, 80, 120, 200],
      "WEIGHTS": ["uniform", "distance"]
    },
    "SVM": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "C": [0.1, 1, 10, 100, 1000],
      "KERNEL": "rbf",
      "GAMMA": [0.001, 0.01, 0.1, 1, 10],
      "DEGREE": [2, 3, 4],  // Only applicable for polynomial kernel
      "COEF0": [0, 1, 10],   // For polynomial and sigmoid kernels
    },
    "BOOST": {
      "TEST_SIZE": 0.2,
      "RANDOM_STATE": 42,
      "N_ESTIMATORS": [50, 100, 150],
      "LEARNING_RATE": [0.01, 0.1, 1.0],
      "TREE_PARAMS": {
          "estimator__max_depth": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "estimator__min_samples_split": [1, 2, 5, 10, 15, 20, 30, 45],
          "estimator__min_samples_leaf": [1, 2, 5, 10, 15, 20, 30, 45]
      }
    }
  }
}
